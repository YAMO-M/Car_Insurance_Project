<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>